<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" href="../../favicon.ico">

    <title>Cloud Photo Repository</title>

    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css">

    <!-- Bootstrap core CSS -->
    <link href="/bootstrap/css/bootstrap.min.css" rel="stylesheet">
       
    <!--CPR Custom styles for this page -->
    <link href="/includes/css/stylesCPR.css" rel="stylesheet">

    
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->

    <!-- Include Modernizr in the head, before any other Javascript -->
    <script src="/includes/js/modernizr-2.6.2.min.js"></script>
    <!-- If no online access, fallback to our hardcoded version of jQuery -->
    <script>window.jQuery || document.write('<script src="/includes/js/jquery-1.8.2.min.js"><\/script>')</script>

  <!--  <link rel="stylesheet" href="/css/bootstrap.min.css">
    <!-- CSS to style the file input field as button and adjust the Bootstrap progress bars -->
    <link rel="stylesheet" href="/css/jquery.fileupload.css">
    <!-- Generic page styles -->
    <link rel="stylesheet" href="/css/style.css">
    <style>
    .form-box{
            border: 1px solid grey;
			padding: 5px;
			margin-bottom: 10px;
			border-radius: 5px;
    }
    </style>    
</head>
<body>
<nav class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="/">Cloud Photo Repo</a>
        </div>
        <div id="navbar" class="navbar-collapse collapse">
            <form class="navbar-form navbar-right">
                <!-- <div class="form-group">
                  <input type="text" placeholder="Email" class="form-control">
                </div>
                <div class="form-group">
                  <input type="password" placeholder="Password" class="form-control">
                </div> -->
                <a type="submit" class="btn btn-success" href="/userhome">HOME</a>
                <a type="submit" class="btn btn-success" href="/photos">PHOTOS</a>
                <a type="submit" class="btn btn-success" href="/profile">PROFILE</a>
                <a href="/logout" class="btn btn-danger">LOGOUT</a>
            </form>
        </div><!--/.navbar-collapse -->
    </div>
</nav>

<div class="container">
<div class="well">     
    <div class = "row demark">
        <div class="col-sm-6 col-sm-offset-3 form-box">
                <form action="/api/register" method="post">
                    <div class="form-group">
                        <label for="deviceName">Please Register your device</label>
                        <input type="text" class="form-control" name="deviceName" placeholder="Your device name here" pattern="[a-zA-Z0-9]+" required>
                            
                    </div>
                    <button type="submit" class="btn btn-warning btn-lg">Register</button>
                </form>
                <div id="registersuccess" class="hidden">
                <div class="alert alert-success">
                    <a href="#" class="close" data-dismiss="alert">&times;</a>
                    <strong>Success!</strong> Your device was registered successfully!!
                </div>
            </div>
        </div>
     </div>   

    <div class = "row demark">
        <div class="col-sm-6 col-sm-offset-3 form-box">
            <div id="notcompatible" class="hidden">
                Your browser may not support the functionality on this page.
            </div>

            <div>
                <label for="deviceName">Choose your device</label>
                <form action="/api/setdevice" method="post" >
                <select class="form-control" id="clientName" name="deviceSelect" onchange="this.form.submit()" required >
                    <option selected disabled value=""><%=deviceId%></option>
                    <% clients.forEach(function (clients) { %>
                    <option value ="<%= clients %>"> <%= clients %>  <% }) %> </option>
                </select>
                </form>
            </div>
        </div>
    </div>     

    <div class = "row demark">
        <div class="col-sm-6 col-sm-offset-3 form-box">
            <!-- The fileinput-button span is used to style the file input field as button -->
            <form id="uploadForm" name="uploadForm" enctype="multipart/form-data" action="/api/upload" method="post">
                <!-- The file input field used as target for the file upload widget -->


                <div class="form-group">
                    <span id="selectbutton" class="btn btn-success fileinput-button">
                     <i class="glyphicon glyphicon-plus"></i>
                    <span>Select photos to upload...</span>
                    <input id="userFileInput" type="file" name="photos" multiple="multiple" multiple>
                        </span>
                </div>
            </form>


            <div id="success" class="hidden">
                <div class="alert alert-success">
                    <a href="#" class="close" data-dismiss="alert">&times;</a>
                    <strong>Success!</strong> All files have been uploaded successfully
                </div>
            </div>

            <!-- The container for the uploaded files -->
            <div id="files" class="files"></div>
            
        </div>
        </div>

            


            <div id="page-header" class="page-header">
            </div>
        </div>
        </div>
    </div>

</div>

</div>

<!-- Bootstrap core JavaScript
     ================================================== -->
<!-- Placed at the end of the document so the pages load faster -->
<!-- First try for the online version of jQuery-->
<script src="http://code.jquery.com/jquery.js"></script>

<!-- If no online access, fallback to our hardcoded version of jQuery -->
<script>window.jQuery || document.write('<script src="/includes/js/jquery-1.8.2.min.js"><\/script>')</script>

<!-- Bootstrap JS -->
<script src="/bootstrap/js/bootstrap.min.js"></script>

<!-- Bootstrap JS is not required, but included for the responsive demo navigation -->
<script src="/js/jquery.min.js"></script>
<!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
<script src="/js/jquery.iframe-transport.js"></script>
<!-- The basic File Upload plugin -->
<script src="/js/upload.js"></script>
<script type="text/javascript">
    window.isCompatible = function () {
        return !!(window.File) && !!(window.FileReader)
                && !!(window.FileList) && !!(window.Blob);
    };
    if (isCompatible() === false) {
        document.getElementById('notcompatible').className = '';
    }
</script>
<script>
    function handleFileSelect(evt) {
        var files = evt.target.files; // FileList object

        // Loop through the FileList and render image files as thumbnails.
        for (var i = 0, f; f = files[i]; i++) {

            // Only process image files.
            if (!f.type.match('image.*')) {
                continue;
            }

            var reader = new FileReader();

            // Closure to capture the file information.
            reader.onload = (function (theFile) {
                return function (e) {
                    // Render thumbnail.
                    var span = document.createElement('span');
                    span.innerHTML = ['<img class="thumb" src="',
                        e.target.result, '" title="',
                        escape(theFile.name), '"/>'].join('');
                    document.getElementById('files')
                            .insertBefore(span, null);
                };
            })(f);

            // Read in the image file as a data URL.
            reader.readAsDataURL(f);
        }
    }

    document.getElementById('userFileInput').addEventListener('change',
            handleFileSelect, false);
</script>
<script>
    function sendFilesToServer(formData, status) {
        var uploadURL = "/api/upload"; //Upload URL
        console.log("this is the value :"+document.getElementById('userDevice').value);
        var jqXHR = $.ajax({
            xhr: function () {
                var xhrobj = $.ajaxSettings.xhr();
                if (xhrobj.upload) {
                    xhrobj.upload.addEventListener('progress', function (event) {
                        var percent = 0;
                        var position = event.loaded || event.position;
                        var total = event.total;
                        if (event.lengthComputable) {
                            percent = Math.ceil(position / total * 100);
                        }
                        //Set progress
                        status.setProgress(percent);
                    }, false);
                }
                return xhrobj;
            },
            url: uploadURL,
            type: "POST",
            contentType: false,
            processData: false,
            cache: false,
            data: formData,
            success: function (data) {
                status.setProgress(100);

                $("#status1").append("File(s) upload Done<br>");
            }
        });

        status.setAbort(jqXHR);
    }

    var rowCount = 0;
    function createStatusbar(obj) {
        rowCount++;
        var row = "odd";
        if (rowCount % 2 == 0) row = "even";
        this.statusbar = $("<div class='statusbar " + row + "'></div>");
        this.filename = $("<div class='filename'></div>").appendTo(this.statusbar);
        this.size = $("<div class='filesize'></div>").appendTo(this.statusbar);
        this.progressBar = $("<div class='progressBar'><div></div></div>").appendTo(this.statusbar);
        this.abort = $("<div class='abort'>Abort</div>").appendTo(this.statusbar);
        obj.after(this.statusbar);

        this.setFileNameSize = function (name, size) {
            var sizeStr = "";
            var sizeKB = size / 1024;
            if (parseInt(sizeKB) > 1024) {
                var sizeMB = sizeKB / 1024;
                sizeStr = sizeMB.toFixed(2) + " MB";
            }
            else {
                sizeStr = sizeKB.toFixed(2) + " KB";
            }

            this.filename.html(name);
            this.size.html(sizeStr);
        }
        this.setProgress = function (progress) {
            var progressBarWidth = progress * this.progressBar.width() / 100;
            this.progressBar.find('div').animate({width: progressBarWidth}, 10).html(progress + "% ");
            if (parseInt(progress) >= 100) {
                this.abort.hide();
            }
        }
        this.setAbort = function (jqxhr) {
            var sb = this.statusbar;
            this.abort.click(function () {
                jqxhr.abort();
                sb.hide();
            });
        }
    }

    function handleFileUpload(files, obj) {

        var formData = new FormData();
        for (var i = 0; i < files.length; i++) {
            formData.append('userFile', files[i], files[i].name);
            var status = new createStatusbar(obj); //Using this we can set progress.
            status.setFileNameSize(files[i].name, files[i].size);
        }
        sendFilesToServer(formData, status);
    }
    $(document).ready(function () {
        var obj = $("#dragandrophandler");
        obj.on('dragenter', function (e) {
            e.stopPropagation();
            e.preventDefault();
            $(this).css('border', '2px solid #0B85A1');
        });
        obj.on('dragover', function (e) {
            e.stopPropagation();
            e.preventDefault();
        });
        obj.on('drop', function (e) {
            $(this).css('border', '2px dotted #0B85A1');
            e.preventDefault();
            var files = e.originalEvent.dataTransfer.files;

            //We need to send dropped files to Server
            handleFileUpload(files, obj);
        });
        $(document).on('dragenter', function (e) {
            e.stopPropagation();
            e.preventDefault();
        });
        $(document).on('dragover', function (e) {
            e.stopPropagation();
            e.preventDefault();
            obj.css('border', '2px dotted #0B85A1');
        });
        $(document).on('drop', function (e) {
            e.stopPropagation();
            e.preventDefault();
        });

    });

    $(document).ready(function(){
        $('#clientName').change(function(){
        var selected = $(this).val();
        if(selected == ''){
            $('#selectbutton').prop("disabled", true);
        }
        else{
            $('#selectbutton').prop("disabled", false);
        }
});
    });

</script>

</body>
</html>
